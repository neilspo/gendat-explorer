///
/// \class TopFrame gdw_TopFrame.h
///
/// \brief Provides ...
///
/// This class handles ...
/// 

#include <wx/wxprec.h>

#ifndef WX_PRECOMP
#include <wx/wx.h>
#endif

#include <wx/treectrl.h>

#include <string>
#include <stdexcept>
#include "database.h"
#include "gdw_TopFrame.h"



////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// \brief Constructor
///
/// The constructor creates the top frame which does ...
///
////////////////////////////////////////////////////////////////////////////////////////////////////



TopFrame::TopFrame(const wxString& title, const wxPoint& pos, const wxSize& size) : wxFrame(NULL, wxID_ANY, title, pos, size)
{
  std::cout << "TopFrame Constructor Start" << std::endl;

  Bind(wxEVT_COMMAND_MENU_SELECTED, &TopFrame::event_handler, this, wxID_EXIT);
  Bind(wxEVT_COMMAND_MENU_SELECTED, &TopFrame::event_handler, this, wxID_ABOUT);

  Bind(wxEVT_COMMAND_MENU_SELECTED, &TopFrame::event_handler, this, ID_first, ID_last);

  

  



  //	File Menu

  wxMenu *menuFile = new wxMenu;
  menuFile->Append(ID_Connect, "&DB Connect");
  menuFile->Append(ID_Disconnect, "&DB Disconnect");
  menuFile->AppendSeparator();
  menuFile->Append(wxID_EXIT);

  // Tools Menu

  wxMenu *menuTools = new wxMenu;
  menuTools->Append(ID_Edit, "&Edit");

  // Help Menu

  wxMenu *menuHelp = new wxMenu;
  menuHelp->Append(ID_ShowLogWin, "Show Log Window");
  menuHelp->Append(wxID_ABOUT);


  wxMenuBar *menuBar = new wxMenuBar;
  menuBar->Append(menuFile,    "&File");
  menuBar->Append(menuTools,   "&Tools");
  menuBar->Append(menuHelp,    "&Help");
  SetMenuBar(menuBar);

  // Create the status bar at the bottom

  CreateStatusBar();

  // Create the main data display area.

  main_panel = new wxPanel(this);

  // put out a bit is text to test the panel.

  wxSizer *sizer = new wxBoxSizer(wxHORIZONTAL);
  sizer->Add(new wxStaticText(main_panel, wxID_ANY, wxT("Startup Window")), 0, wxALL, 5);

  main_panel->SetSizer(sizer);
  std::cout << "TopFrame Constructor End" << std::endl;
}



// ============================================================================
// Event handlers
// ============================================================================

////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// \brief Event handler
///
/// This member function handles all of the wxWidgets events that are generated by TopFrame.
///
////////////////////////////////////////////////////////////////////////////////////////////////////


void TopFrame::event_handler (wxCommandEvent& event)
{
  std::cout << "TopFrame::event_handler: Start" << std::endl;

  int event_id = event.GetId();

  switch (event_id)
    {
    case ID_Connect:
      std::cout << "ID_Connect" << std::endl;
      break;
    case ID_Disconnect:
      std::cout << "ID_Disconnect" << std::endl;
      break;
    case ID_ShowLogWin:
      new wxLogWindow(this, wxS("Log messages"), true, false);
      break;
    case ID_Edit:
      std::cout << "ID_Edit" << std::endl;
      break;
      
    case wxID_ABOUT:

      // Show the "About" page.
      
      wxMessageBox(PROG_VERSION, "About GenDat Explorer", wxOK | wxICON_INFORMATION);
      break;
      
    case wxID_EXIT:

      // Exit the program.
      
      Close(true);
      break;
    }
}





// Connect to database.

void TopFrame::OnConnect(wxCommandEvent& event)
{
  // if (wxGetApp().argc!=4)
  //   {
  //     std::cerr << "Usage: " << wxGetApp().argv[0] << " Host, User, Password" << std::endl;
  //     return;
  //   }

  // std::string host    = std::string(wxGetApp().argv[1]);
  // std::string user    = std::string(wxGetApp().argv[2]);
  // std::string passwd  = std::string(wxGetApp().argv[3]);
  // std::string db_name = "gendat";
	
  // try
  //   {
  //     // Connect to the database.

  //     gendat_db.connect(host, user, passwd, db_name);

  //     // Change the window status message.

  //     SetStatusText("Connected to database");
  //   }
  // catch (std::runtime_error& exception)
  //   {
  //     wxLogMessage(exception.what());
  //   }
}



// Disconnect from database.

void TopFrame::OnDisconnect(wxCommandEvent& event)
{
  gendat_db.disconnect();
  SetStatusText("No database connection");
}







// Event handler for menu item - Tools > Edit

void TopFrame::OnEdit(wxCommandEvent& event)
{
  wxPanel* parent = main_panel;
	
  // Clear the parent window.

  parent->DestroyChildren();

  wxBoxSizer* sizer = new wxBoxSizer(wxVERTICAL);

  wxTreeCtrl *tree = new wxTreeCtrl(parent, wxID_ANY, wxDefaultPosition, wxDefaultSize);

  sizer->Add(new wxStaticText(parent, wxID_ANY, wxT("Test Window")), 0, wxALL, 5);
  sizer->Add(tree, 1, wxEXPAND);

  tree->SetWindowStyle(wxTR_HIDE_ROOT); //hides the real root node to have many roots

  wxTreeItemId root = tree->AddRoot("invisible root");//this root will be invisible
  wxTreeItemId r1   = tree->AppendItem(root, "1871 Census");
  wxTreeItemId r2   = tree->AppendItem(root, "1881 Census");
  tree->AppendItem(r1, "Node1");
  tree->AppendItem(r1, "Node2");
  tree->AppendItem(r2, "Node3");

  parent->SetSizer(sizer);
  SetClientSize(parent->GetBestSize());
}
